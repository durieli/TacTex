/*
* Copyright 2011 the original author or authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an
* "AS IS" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
* either express or implied. See the License for the specific language
* governing permissions and limitations under the License.
*/

package edu.utexas.cs.tactex.servercustomers.factoredcustomer.interfaces;

import org.apache.commons.math3.linear.ArrayRealVector;
import org.apache.commons.math3.linear.RealVector;
import org.powertac.common.TariffSpecification;

import edu.utexas.cs.tactex.servercustomers.common.TariffSubscription;
import edu.utexas.cs.tactex.servercustomers.factoredcustomer.CapacityProfile;

import org.powertac.common.Tariff;

/**
 * @author Prashant Reddy
 */
public interface CapacityOriginator
{
    CapacityProfile getCurrentForecast(int currentTimeslot);
    
    CapacityProfile getForecastStartingAt(int currentTimeslot, int timeslot);

    CapacityProfile getCurrentForecastPerSub(int currentTimeslot, TariffSubscription sub);

    double useCapacity(TariffSubscription subscription);
    
    double adjustCapacityForSubscription(int timeslot, double totalCapacity, TariffSubscription subscription);
    
    String getCapacityName();
    
    CapacityBundle getParentBundle();

    double getShiftingInconvenienceFactor(Tariff tariff, int recordLength);

    // adding data access methods
    void convertEnergyProfileFromBrokerToServer(RealVector originatorEnergy,
        int currentTimeslot);

    ArrayRealVector getPredictedEnergy(
        TariffSubscription subscription,
        int recordLength, 
        int currentTimeslot) throws Exception;

    void clearSubscriptionRelatedData();
}



